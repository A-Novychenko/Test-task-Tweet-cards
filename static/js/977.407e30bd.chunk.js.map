{"version":3,"file":"static/js/977.407e30bd.chunk.js","mappings":"oUAGaA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mI,SCEnBE,EAAU,CACd,CAAEC,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,aAAcC,MAAO,eAGnBC,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACzB,GAAwCC,EAAAA,EAAAA,UAAS,OAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,SAACZ,EAAD,CACEG,QAASA,EACTC,MAXFK,EAAeN,EAAQU,MAAK,qBAAGT,QAAsBK,CAAzB,IAAyC,GAYnEK,SAVsB,SAAAC,GACxBL,EAAgBK,EAASX,OACzBO,GAASK,EAAAA,EAAAA,GAAmBD,EAASX,QACrCG,GACD,EAOGU,MAAO,SAAAA,GAAK,yBACPA,GADO,IAEVC,aAAc,EACdC,QAAO,kBACFF,EAAME,QADL,IAEJC,UAAW,UACXC,QAAS,aAND,GAWjB,E,UCrCYC,EAA4B,SAAAC,GAAK,OAAIA,EAAMC,WAAV,EAEjCC,EAAc,SAAAF,GAAK,OAAIA,EAAMG,MAAMC,KAAhB,EACnBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMG,MAAMG,SAAhB,EAEvBC,GAAqBC,EAAAA,EAAAA,IAChC,CAPyB,SAAAR,GAAK,OAAIA,EAAMG,MAAMM,KAAhB,EAOhBV,EALkB,SAAAC,GAAK,OAAIA,EAAMU,YAAV,IAMrC,SAACC,EAAWC,EAAgBF,GAC1BG,QAAQC,IAAI,YAAaH,GACzB,IAAMI,EAAcJ,EAAUK,KAAI,SAAAC,GAEhC,OADoBL,EAAeM,MAAK,SAAAC,GAAE,OAAIA,IAAOF,EAAKG,EAAhB,KAEjC,kBAAKH,GAAZ,IAAkBhB,aAAa,KAE1B,kBAAKgB,GAAZ,IAAkBhB,aAAa,GAChC,IAED,OAAQS,GACN,IAAK,SACH,OAAOK,EAAYM,QAAO,SAAAJ,GAAI,OAAKA,EAAKhB,WAAV,IAChC,IAAK,aACH,OAAOc,EAAYM,QAAO,SAAAJ,GAAI,OAAIA,EAAKhB,WAAT,IAChC,QACE,OAAOc,EAEZ,I,oBCzBUO,EAAW5C,EAAAA,GAAAA,GAAH,2TAiBR6C,EAAO7C,EAAAA,GAAAA,IAAH,8EAIJ8C,EAAa9C,EAAAA,GAAAA,IAAH,qLAGG+C,GAMbC,EAAOhD,EAAAA,GAAAA,IAAH,+GASJiD,EAAYjD,EAAAA,GAAAA,IAAH,8EAMTkD,EAAYlD,EAAAA,GAAAA,IAAH,uOAQTmD,EAAenD,EAAAA,GAAAA,IAAH,ybAkBZoD,EAAmBpD,EAAAA,GAAAA,IAAH,sTAchBqD,EAAQrD,EAAAA,GAAAA,IAAH,yHAOLsD,EAAatD,EAAAA,GAAAA,EAAH,oRAiBVuD,EAASvD,EAAAA,GAAAA,OAAH,wfAQG,SAAAwD,GAAK,OAAKA,EAAMjC,YAAc,UAAY,SAArC,ICxGdkC,EAAW,SAAC,GAAD,QACtBlB,KAAQG,EADc,EACdA,GAAIgB,EADU,EACVA,OAAQnB,EADE,EACFA,KAAMoB,EADJ,EACIA,OAAQC,EADZ,EACYA,UAAWrC,EADvB,EACuBA,YAC7CsC,EAFsB,EAEtBA,eAFsB,OAItB,UAACjB,EAAD,YACE,SAACI,EAAD,CAAMc,IAAKC,EAAMC,IAAKzB,KACtB,SAACM,EAAD,WACE,SAACC,EAAD,OAGF,SAACG,EAAD,WACE,SAACC,EAAD,WACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEa,MAAO,CAAEC,gBAAgB,OAAD,OAASR,aAMzC,UAACL,EAAD,YACE,UAACC,EAAD,eAAcK,EAAd,cACA,UAACL,EAAD,WAAaM,EAAb,iBACA,SAACL,EAAD,CACEY,KAAK,SACLC,QAAS,WACPP,EAAe,CAAEnB,GAAAA,EAAIkB,UAAAA,GACtB,EACDrC,YAAaA,EALf,SAOGA,EAAc,YAAc,gBA9Bb,ECdX8C,EAAOrE,EAAAA,GAAAA,GAAH,4ECCJsE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcV,EAAjB,EAAiBA,eAAjB,OACtB,SAACQ,EAAD,UACGE,GACCA,EAAajC,KAAI,SAAAC,GAAI,OACnB,SAACkB,EAAD,CAAwBlB,KAAMA,EAAMsB,eAAgBA,GAArCtB,EAAKG,GADD,KAHH,ECDXa,GAASvD,EAAAA,GAAAA,OAAH,4kBCANwE,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,SAAC,GAAD,CAAQN,KAAK,SAASC,QAAS,kBAAMK,GAAN,EAA/B,sBADyB,ECAdC,GAAU,kBAAM,SAAC,GAAD,CAAQC,GAAG,IAAX,iBAAN,E,WCCVpB,IAASvD,EAAAA,EAAAA,IAAO4E,GAAAA,GAAP5E,CAAH,ilB,WC6FnB,GAzEe,WACb,OAAsCO,EAAAA,EAAAA,UAAS,GAA/C,eAAOsE,EAAP,KAAoBC,EAApB,KACA,GAAwCvE,EAAAA,EAAAA,UAAS,IAAjD,eAAOgE,EAAP,KAAqBQ,EAArB,KACA,GAAsBxE,EAAAA,EAAAA,UAAS,GAAxByE,GAAP,eAEMtE,GAAWC,EAAAA,EAAAA,MACXsE,GAAeC,EAAAA,EAAAA,IAAYrD,GAC3BsD,GAAkBD,EAAAA,EAAAA,IAAY7D,GAC9B+D,EAAUP,EAAcG,EACxBK,EAAYC,KAAKC,KAAKN,EAAaO,OAASR,GAC5CpD,GAAYsD,EAAAA,EAAAA,IAAYvD,GACxBD,GAAQwD,EAAAA,EAAAA,IAAY1D,IAE1BiE,EAAAA,EAAAA,YAAU,WACR/E,GAASgF,EAAAA,EAAAA,KACV,GAAE,CAAChF,KAEJ+E,EAAAA,EAAAA,YAAU,WACRV,GAAgB,OAAIE,GAAcU,MAAM,EAAGP,GAC5C,GAAE,CAACA,EAASH,IAuBb,OACE,iCACE,SAACP,GAAD,KACA,SAACrE,EAAD,CAAUC,iBAPW,WACvBwE,EAAe,EAChB,KAMKpD,IACA,SAAC4C,EAAD,CAAUC,aAAcA,EAAcV,eA1BrB,SAAC,GAAuB,IAArBnB,EAAoB,EAApBA,GAAIkB,EAAgB,EAAhBA,UACtBgC,EAAcT,EAAgBU,SAASnD,GAC7CP,QAAQC,IAAI,cAAewD,GAEvBA,IACFlF,GAASoF,EAAAA,EAAAA,IAAgBpD,IACzBhC,GAASqF,EAAAA,EAAAA,GAAuB,CAAErD,GAAAA,EAAIkB,UAAWA,EAAY,MAE1DgC,IACHlF,GAASsF,EAAAA,EAAAA,IAAatD,IACtBhC,GAASqF,EAAAA,EAAAA,GAAuB,CAAErD,GAAAA,EAAIkB,UAAWA,EAAY,KAEhE,IAgBIyB,IAAcR,IAAgBjD,IAAcF,IAC3C,SAAC8C,GAAD,CAAaC,SAfF,WACfK,GAAe,SAAAmB,GAAS,OAAIA,EAAY,CAAhB,GACzB,IAeIrE,IACC,SAAC,MAAD,CACEsE,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QACVC,IAAK,QACLC,KAAM,MACNC,UAAW,mBAEbC,SAAS,MAKlB,C","sources":["components/Dropdown/Dropdown.styled.js","components/Dropdown/Dropdown.js","redux/selectors.js","components/CardItem/CardItem.styled.js","components/CardItem/CardItem.js","components/CardList/CardList.styled.js","components/CardList/CardList.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.js","components/BackBtn/BackBtn.js","components/BackBtn/BackBtn.styled.js","pages/Tweets.js"],"sourcesContent":["import ReactSelect from 'react-select';\nimport styled from 'styled-components';\n\nexport const SelectStyled = styled(ReactSelect)`\n  margin-bottom: 40px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 400px;\n\n  color: #5736a3;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeStatusFilter } from 'redux/statusFilter/statusFilterSlice';\nimport { SelectStyled } from './Dropdown.styled';\n\nconst options = [\n  { value: 'all', label: 'all' },\n  { value: 'follow', label: 'follow' },\n  { value: 'followings', label: 'followings' },\n];\n\nexport const Dropdown = ({ resetCurrentPage }) => {\n  const [currentValue, setcurrentValue] = useState('all');\n  const dispatch = useDispatch();\n\n  const getValue = () =>\n    currentValue ? options.find(({ value }) => value === currentValue) : '';\n\n  const handleChangeValue = newValue => {\n    setcurrentValue(newValue.value);\n    dispatch(changeStatusFilter(newValue.value));\n    resetCurrentPage();\n  };\n\n  return (\n    <SelectStyled\n      options={options}\n      value={getValue()}\n      onChange={handleChangeValue}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 8,\n        colors: {\n          ...theme.colors,\n          primary25: '#5cd3a8',\n          primary: '#5736a3',\n        },\n      })}\n    />\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectUsers = state => state.users.items;\nexport const selectFollowingsUsersList = state => state.isFollowing;\nexport const selectStatusFilter = state => state.statusFilter;\nexport const selectError = state => state.users.error;\nexport const selectIsLoading = state => state.users.isLoading;\n\nexport const selectVisibleUsers = createSelector(\n  [selectUsers, selectFollowingsUsersList, selectStatusFilter],\n  (usersData, followingsList, statusFilter) => {\n    console.log('usersData', usersData);\n    const hendleUsers = usersData.map(user => {\n      const isFollowing = followingsList.some(el => el === user.id);\n      if (isFollowing) {\n        return { ...user, isFollowing: true };\n      }\n      return { ...user, isFollowing: false };\n    });\n\n    switch (statusFilter) {\n      case 'follow':\n        return hendleUsers.filter(user => !user.isFollowing);\n      case 'followings':\n        return hendleUsers.filter(user => user.isFollowing);\n      default:\n        return hendleUsers;\n    }\n  }\n);\n","import styled from 'styled-components';\nimport bgImg from '../../img/background.png';\n\nexport const CardWrap = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n\n  text-align: center;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Wrap = styled.div`\n  padding: 28px 36px 0 36px;\n  margin-bottom: 88px;\n`;\nexport const Background = styled.div`\n  width: 308;\n  height: 168px;\n  background-image: url(${bgImg});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n\n  width: '76';\n  height: '22';\n`;\n\nexport const AvatarBox = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 214px;\n`;\n\nexport const Delimiter = styled.div`\n  width: 100%;\n  height: 8px;\n  background-color: #ebd8ff;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const BorderAvatar = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n\n  border-radius: 50%;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const BackgroundAvatar = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 62px;\n  height: 62px;\n\n  border-radius: 50%;\n  background-color: #5736a3;\n  background-image: url(https://i.pravatar.cc/150?img=7);\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Statistics = styled.p`\n  margin-bottom: 16px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.33;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n\n  :nth-last-child(-n + 2) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  margin-top: 26px;\n\n  background-color: ${props => (props.isFollowing ? '#5cd3a8' : '#ebd8ff')};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;\n","import logo from '../../img/logo.png';\n// import bgImg from '../../img/background.png';\nimport {\n  Background,\n  BorderAvatar,\n  Button,\n  CardWrap,\n  Delimiter,\n  Inner,\n  Statistics,\n  AvatarBox,\n  BackgroundAvatar,\n  Logo,\n  Wrap,\n} from './CardItem.styled';\n\nexport const CardItem = ({\n  user: { id, avatar, user, tweets, followers, isFollowing },\n  handleClickBtn,\n}) => (\n  <CardWrap>\n    <Logo src={logo} alt={user} />\n    <Wrap>\n      <Background></Background>\n    </Wrap>\n\n    <AvatarBox>\n      <Delimiter>\n        <BorderAvatar>\n          <BackgroundAvatar\n            style={{ backgroundImage: `url(${avatar}` }}\n          ></BackgroundAvatar>\n        </BorderAvatar>\n      </Delimiter>\n    </AvatarBox>\n\n    <Inner>\n      <Statistics> {tweets} tweets</Statistics>\n      <Statistics>{followers} Followers</Statistics>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          handleClickBtn({ id, followers });\n        }}\n        isFollowing={isFollowing}\n      >\n        {isFollowing ? 'Following' : 'Follow'}\n      </Button>\n    </Inner>\n  </CardWrap>\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 48px;\n`;\n","import { CardItem } from 'components/CardItem/CardItem';\nimport { List } from './CardList.styled';\n\nexport const CardList = ({ currentUsers, handleClickBtn }) => (\n  <List>\n    {currentUsers &&\n      currentUsers.map(user => (\n        <CardItem key={user.id} user={user} handleClickBtn={handleClickBtn} />\n      ))}\n  </List>\n);\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 26px;\n  width: 200px;\n\n  background-color: #5736a3;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #fff;\n\n  cursor: pointer;\n\n  &:hover {\n    color: #373737;\n    background-color: #5cd3a8;\n  }\n`;\n","import { Button } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ nextPage }) => (\n  <Button type=\"button\" onClick={() => nextPage()}>\n    Load More\n  </Button>\n);\n","import { Button } from 'components/BackBtn';\n\nexport const BackBtn = () => <Button to=\"/\">Back</Button>;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  margin-top: 26px;\n  margin-bottom: 26px;\n  width: 200px;\n\n  background-color: #5736a3;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #fff;\n  text-decoration: none;\n\n  cursor: pointer;\n\n  &:hover {\n    color: #373737;\n    background-color: #5cd3a8;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addFollowing,\n  removeFollowing,\n} from 'redux/isFollowing/isFollowingSlice';\nimport {\n  changeQuantityFollower,\n  fetchUsers,\n} from 'redux/users/usersOperations';\nimport { Dropdown } from 'components/Dropdown';\nimport {\n  selectError,\n  selectFollowingsUsersList,\n  selectVisibleUsers,\n} from 'redux/selectors';\nimport { CardList } from 'components/CardList';\nimport { LoadMoreBtn } from 'components/LoadMoreBtn';\nimport { BackBtn } from 'components/BackBtn';\n\nimport { selectIsLoading } from 'redux/selectors';\nimport { Circles } from 'react-loader-spinner';\n\nconst Tweets = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentUsers, setCurrentUsers] = useState([]);\n  const [userPerPage] = useState(3);\n\n  const dispatch = useDispatch();\n  const visibleUsers = useSelector(selectVisibleUsers);\n  const IsFollowingList = useSelector(selectFollowingsUsersList);\n  const lastIdx = currentPage * userPerPage;\n  const totalPage = Math.ceil(visibleUsers.length / userPerPage);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setCurrentUsers([...visibleUsers].slice(0, lastIdx));\n  }, [lastIdx, visibleUsers]);\n\n  const handleClickBtn = ({ id, followers }) => {\n    const inFollowers = IsFollowingList.includes(id);\n    console.log('inFollowers', inFollowers);\n\n    if (inFollowers) {\n      dispatch(removeFollowing(id));\n      dispatch(changeQuantityFollower({ id, followers: followers - 1 }));\n    }\n    if (!inFollowers) {\n      dispatch(addFollowing(id));\n      dispatch(changeQuantityFollower({ id, followers: followers + 1 }));\n    }\n  };\n\n  const nextPage = () => {\n    setCurrentPage(prevState => prevState + 1);\n  };\n  const resetCurrentPage = () => {\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <BackBtn />\n      <Dropdown resetCurrentPage={resetCurrentPage} />\n      {!error && (\n        <CardList currentUsers={currentUsers} handleClickBtn={handleClickBtn} />\n      )}\n      {totalPage !== currentPage && !isLoading && !error && (\n        <LoadMoreBtn nextPage={nextPage} />\n      )}\n      {isLoading && (\n        <Circles\n          height=\"300\"\n          width=\"300\"\n          color=\"#5cd3a8\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            position: 'fixed',\n            top: '150px',\n            left: '50%',\n            transform: 'translate(-50%)',\n          }}\n          visible={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["SelectStyled","styled","ReactSelect","options","value","label","Dropdown","resetCurrentPage","useState","currentValue","setcurrentValue","dispatch","useDispatch","find","onChange","newValue","changeStatusFilter","theme","borderRadius","colors","primary25","primary","selectFollowingsUsersList","state","isFollowing","selectError","users","error","selectIsLoading","isLoading","selectVisibleUsers","createSelector","items","statusFilter","usersData","followingsList","console","log","hendleUsers","map","user","some","el","id","filter","CardWrap","Wrap","Background","bgImg","Logo","AvatarBox","Delimiter","BorderAvatar","BackgroundAvatar","Inner","Statistics","Button","props","CardItem","avatar","tweets","followers","handleClickBtn","src","logo","alt","style","backgroundImage","type","onClick","List","CardList","currentUsers","LoadMoreBtn","nextPage","BackBtn","to","Link","currentPage","setCurrentPage","setCurrentUsers","userPerPage","visibleUsers","useSelector","IsFollowingList","lastIdx","totalPage","Math","ceil","length","useEffect","fetchUsers","slice","inFollowers","includes","removeFollowing","changeQuantityFollower","addFollowing","prevState","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","position","top","left","transform","visible"],"sourceRoot":""}